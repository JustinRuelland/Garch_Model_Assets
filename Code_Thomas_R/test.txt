
library(zoo)
library(roll)
library(ggplot2)
library(dplyr)
library(pracma)



#---------------------- Définition des paramètres ------------------------

window = 3
m = 2

#---------------------- Mise en forme des données ------------------------

data <- read.csv2("C:/Users/thoma/Documents/GitHub/Garch_Model_Assets/Code_Justin_R/Yahoo_import/FTT-USD.csv")
data1 <- read.csv2("C:/Users/thoma/Documents/GitHub/Garch_Model_Assets/Code_Justin_R/Yahoo_import/AAPL.csv")
data <- read.csv2("C:/Users/thoma/Documents/GitHub/Garch_Model_Assets/Code_Justin_R/Yahoo_import/GOOG.csv")

data <- data$Date.Open.High.Low.Close.Adj.Close.Volume
x_quotes <- c()
for(i in data){
  x_quotes <- c(x_quotes, as.numeric(strsplit(i, ",")[[1]][2]))
}

epsilon_2 <- log(x_quotes[2:200]/x_quotes[1:199])
epsilon <- epsilon_2**2
data = epsilon

#---------------------- Bollinger Bands ------------------------

bb<-function(data, window, m){
  
  sma_na = data.frame(x= c())
  upper_na = data.frame(x= c())
  lower_na = data.frame(x= c())
  for(i in 1:window){
    sma_na[i,1] = NA
    upper_na[i,1] = NA
    lower_na[i,1] = NA
  }
  
  
  sma = movavg(data, n=window, type='s')[window:length(movavg(data, n=window, type='e'))]
  std = roll_sd(data, window )[window:length(roll_sd(data, window ))]
  upper_bb = sma + std * m
  lower_bb = sma - std * m
  
  
  for(i in 1:length(sma)){
    sma_na[window+i,1] = sma[i]
    upper_na[window+i,1] = upper_bb[i]
    lower_na[window+i,1] = lower_bb[i]
  }
  
  
  vecteur1 = data.frame(data)
  vecteur1[length(data)+1,1] = NA
  
  tableau = data.frame(x = vecteur1, y = upper_na, z = lower_na, a = sma_na) 
  return(tableau)
}

#---------------------- Bollinger Bands exponentielle ------------------------

bb_exp<-function(data, window, m){
  
  sma_na = data.frame(x= c())
  upper_na = data.frame(x= c())
  lower_na = data.frame(x= c())
  for(i in 1:window){
    sma_na[i,1] = NA
    upper_na[i,1] = NA
    lower_na[i,1] = NA
  }
  
  
  sma = movavg(data, n=window, type='e')[window:length(movavg(data, n=window, type='e'))]
  std = roll_sd(data, window )[window:length(roll_sd(data, window ))]
  upper_bb = sma + std * m
  lower_bb = sma - std * m
  
  
  for(i in 1:length(sma)){
    sma_na[window+i,1] = sma[i]
    upper_na[window+i,1] = upper_bb[i]
    lower_na[window+i,1] = lower_bb[i]
  }
  
  
  vecteur1 = data.frame(data)
  vecteur1[length(data)+1,1] = NA
  
  tableau = data.frame(x = vecteur1, y = upper_na, z = lower_na, a = sma_na) 
  return(tableau)
}


bb_data = bb(data,2, 2)
bb_data1 = bb(data,5, 2)
bb_data2 = bb(data,20, 2)
bb_data = bb_exp(data,5, m)



#---------------------- Affichage graphique ------------------------

x  <- c(1:length(bb_data[,2]))

#plot the first data series using plot()
plot(x, bb_data[,1], type="o", col="blue", pch=".", ylab="y", lty=1)


#add second data series to the same chart using points() and lines()
points(x, bb_data[,4], col="green", pch=".")
lines(x, bb_data[,4], col="green",lty=2)

#add third data series to the same chart using points() and lines()
points(x, bb_data[,3], col="red",pch=".")
lines(x, bb_data[,3], col="red", lty=3)

points(x, bb_data[,2], col="red",pch=".")
lines(x, bb_data[,2], col="red", lty=4)


#---------------------- Back Test Bollinger Bands ------------------------

bb_backtest<-function(bb, m){
  test = data.frame(id=c()) 
  for(i in 1:length(bb[,1]) ){
    if (bb[i,1]-bb[i,4]>bb[i,2] | bb[i,1]-bb[i,4]<bb[i,3]) {
      test=rbind(test,c(0)) 
    }
    else {
      test=rbind(test,c(1)) 
    }
  }
  return(test)
  
}

backtest = bb_backtest(bb_data, 2)
